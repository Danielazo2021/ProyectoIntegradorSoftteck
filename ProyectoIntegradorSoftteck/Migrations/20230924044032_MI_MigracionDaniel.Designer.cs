// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoIntegradorSoftteck.DataAccess;

#nullable disable

namespace ProyectoIntegradorSoftteck.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20230924044032_MI_MigracionDaniel")]
    partial class MI_MigracionDaniel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProyectoIntegradorSoftteck.Entities.Proyecto", b =>
                {
                    b.Property<int>("CodProyecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodProyecto"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adress");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.HasKey("CodProyecto");

                    b.ToTable("projects");

                    b.HasData(
                        new
                        {
                            CodProyecto = 1,
                            Direccion = "Libertad 180 Carloz Paz",
                            Estado = "Terminado",
                            IsActive = true,
                            Nombre = "Optimización de Procesos de Refinamiento de Petróleo CrudoManolita y Cia"
                        },
                        new
                        {
                            CodProyecto = 2,
                            Direccion = "Av San Martin S/N Rio Cuarto",
                            Estado = "Pendiente",
                            IsActive = true,
                            Nombre = "Programa de Mantenimiento y Actualización de Equipos"
                        },
                        new
                        {
                            CodProyecto = 3,
                            Direccion = "Colon 1050 Cordoba Capital",
                            Estado = "Confirmado",
                            IsActive = true,
                            Nombre = "Modernización de la Refinería para Carmelo SA"
                        });
                });

            modelBuilder.Entity("ProyectoIntegradorSoftteck.Entities.Servicio", b =>
                {
                    b.Property<int>("CodServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("service_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodServicio"), 1L, 1);

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("state");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<double>("ValorHora")
                        .HasColumnType("float")
                        .HasColumnName("value_hour");

                    b.HasKey("CodServicio");

                    b.ToTable("services");

                    b.HasData(
                        new
                        {
                            CodServicio = 1,
                            Descr = "Refinamiento de Petróleo Crudo",
                            Estado = true,
                            IsActive = true,
                            ValorHora = 150000.0
                        },
                        new
                        {
                            CodServicio = 2,
                            Descr = "Desulfuración de Combustibles",
                            Estado = true,
                            IsActive = true,
                            ValorHora = 75000.0
                        },
                        new
                        {
                            CodServicio = 3,
                            Descr = "Mantenimiento y Reparación de Equipos de Refinería",
                            Estado = true,
                            IsActive = true,
                            ValorHora = 90000.0
                        },
                        new
                        {
                            CodServicio = 4,
                            Descr = "Consultoría en Eficiencia Energética y Ambiental",
                            Estado = false,
                            IsActive = true,
                            ValorHora = 90000.0
                        });
                });

            modelBuilder.Entity("ProyectoIntegradorSoftteck.Entities.Trabajo", b =>
                {
                    b.Property<int>("CodTrabajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("work_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodTrabajo"), 1L, 1);

                    b.Property<int>("CantHoras")
                        .HasColumnType("int")
                        .HasColumnName("count_hours");

                    b.Property<int>("Cod_proyecto")
                        .HasColumnType("int")
                        .HasColumnName("project_id");

                    b.Property<int>("Cod_servicio")
                        .HasColumnType("int")
                        .HasColumnName("service_id");

                    b.Property<double>("Costo")
                        .HasColumnType("float")
                        .HasColumnName("cost");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<double>("ValorHora")
                        .HasColumnType("float")
                        .HasColumnName("value_hour");

                    b.HasKey("CodTrabajo");

                    b.HasIndex("Cod_proyecto");

                    b.HasIndex("Cod_servicio");

                    b.ToTable("works");

                    b.HasData(
                        new
                        {
                            CodTrabajo = 1,
                            CantHoras = 120,
                            Cod_proyecto = 3,
                            Cod_servicio = 1,
                            Costo = 18000000.0,
                            Fecha = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ValorHora = 150000.0
                        },
                        new
                        {
                            CodTrabajo = 2,
                            CantHoras = 50,
                            Cod_proyecto = 2,
                            Cod_servicio = 1,
                            Costo = 7500000.0,
                            Fecha = new DateTime(2023, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ValorHora = 150000.0
                        },
                        new
                        {
                            CodTrabajo = 3,
                            CantHoras = 20,
                            Cod_proyecto = 2,
                            Cod_servicio = 2,
                            Costo = 1500000.0,
                            Fecha = new DateTime(2023, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            ValorHora = 75000.0
                        });
                });

            modelBuilder.Entity("ProyectoIntegradorSoftteck.Entities.Usuario", b =>
                {
                    b.Property<int>("CodUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodUsuario"), 1L, 1);

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_name");

                    b.HasKey("CodUsuario");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            CodUsuario = 1,
                            Contrasena = "0bafc68a2ce2898800fc9ce5d19d99b47a828cbb3453712fec676aa2dbc290e6",
                            Dni = 2020200,
                            Email = "marcio@marcio.com",
                            IsActive = true,
                            Nombre = "Marcio",
                            Tipo = 1,
                            UserName = "ProfeMarcio"
                        },
                        new
                        {
                            CodUsuario = 2,
                            Contrasena = "ceea4b372a2f951d90f7ae0342989b9643978119756141db7af70a0c9b621c64",
                            Dni = 1010100,
                            Email = "daniel@daniel.com",
                            IsActive = true,
                            Nombre = "Daniel",
                            Tipo = 1,
                            UserName = "Danielazo"
                        },
                        new
                        {
                            CodUsuario = 3,
                            Contrasena = "374600eb00b38ae69c41d6a1fb91dc2d0ddbacac5d3a165d0ff546549fe2078c",
                            Dni = 3030300,
                            Email = "pepe@pepe.com",
                            IsActive = true,
                            Nombre = "Pepe",
                            Tipo = 2,
                            UserName = "Pepito"
                        });
                });

            modelBuilder.Entity("ProyectoIntegradorSoftteck.Entities.Trabajo", b =>
                {
                    b.HasOne("ProyectoIntegradorSoftteck.Entities.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("Cod_proyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoIntegradorSoftteck.Entities.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("Cod_servicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Servicio");
                });
#pragma warning restore 612, 618
        }
    }
}
